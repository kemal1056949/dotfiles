#!/bin/bash

# If not running interactively, don't do anything
case $- in
    *i*) ;;
    *) return;;
esac

# Sensible bash defaults
if [ -f "$HOME/.sensible.bash" ]; then
    source "$HOME/.sensible.bash"
fi

# Prompt string configuration
if [ -f "$HOME/.bash-powerline.sh" ]; then
    source "$HOME/.bash-powerline.sh"
fi

# Alias definitions
if [ -f "$HOME/.aliases" ]; then
    source "$HOME/.aliases"
fi

# Local alias definitions
if [ -f "$HOME/.aliases.local" ]; then
    source "$HOME/.aliases.local"
fi

# Set dircolors
if [ -f "$HOME/.dircolors" ]; then
    source "$HOME/.dircolors"
fi

# Color the output of 'man' command
# source: https://wiki.archlinux.org/index.php/Man_Page#Colored_man_pages
man() {
    env LESS_TERMCAP_mb=$(printf "\e[1;31m") \
        LESS_TERMCAP_md=$(printf "\e[1;31m") \
        LESS_TERMCAP_me=$(printf "\e[0m") \
        LESS_TERMCAP_se=$(printf "\e[0m") \
        LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
        LESS_TERMCAP_ue=$(printf "\e[0m") \
        LESS_TERMCAP_us=$(printf "\e[1;32m") \
        man "$@"
}

# Use Vim as the default text editor (useful when using Git)
export EDITOR=vim

# Tab completion for conda
if [ -f "$HOME/miniconda2/bin/register-python-argcomplete" ]; then
    eval "$($HOME/miniconda2/bin/register-python-argcomplete conda)"
fi

# Local .brc
if [ -f "$HOME/.brc.local" ]; then
    source "$HOME/.brc.local"
fi
